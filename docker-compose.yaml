version: "3"

services:

  # FastAPI server handling the callback
  apple-wallet-web-service:
    container_name: apple-wallet-web-service
    dns:
      ${DNS:-8.8.8.8}
    # image: ghcr.io/edutap-eu/edutap.apple_wallet_web_service:latest
    build:
      context: .
      args:
        - HTTP_PORT=${HTTP_PORT:-80}
        - BROKER_URL=${BROKER_URL:-kafka:19094}
    ports:
      - "${HTTP_PORT:-8084}:${HTTP_PORT:-80}"
    valumes:
      - "./logs:/var/log/apple_wallet_web_service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apple-wallet-web-service.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.apple-wallet-web-service.entrypoints=websecure"
      - "traefik.http.routers.apple-wallet-web-service.entrypoints=https"
      - "traefik.http.routers.apple-wallet-web-service.tls=true"
      - "traefik.http.routers.apple-wallet-web-service.tls.domains[0].main=${DOMAIN}"
      - "traefik.http.routers.apple-wallet-web-service.tls.certresolver=le"

  # The fastapi server pushes the callback data to kafka
  kafka:
    container_name: kafka
    image: 'docker.io/bitnami/kafka:latest'
    ports:
      - '9092:9092'
    volumes:
      - "./kafka_data:/bitnami/data"
    environment:
      # KRaft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERN://:19094,EXTERNAL://:9094                 # Gesamtmenge der Listener
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERN://kafka:19094,EXTERNAL://127.0.0.1:9094  # Kontaktadressen der Listener
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERN:PLAINTEXT,EXTERNAL:PLAINTEXT # pro Listener, das Auth-Verfahren
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "${KAFKA_UI_PORT:-30300}:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19094
      DYNAMIC_CONFIG_ENABLED: 'true'         # not necessary, added for tests
      SERVER_SERVLET_CONTEXT_PATH: /kafka-ui # necessary to set the path to /kafka-ui via traefik, otherwise 404
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafka-ui.rule=Host(`${DOMAIN}`) && PathPrefix(`/kafka-ui`)"
      - "traefik.http.routers.kafka-ui.entrypoints=https,http"
      - "traefik.http.routers.kafka-ui.tls.certresolver=le"

  # create the topics
  create-topic:
    image: bitnami/kafka:latest
    container_name: "script-create-topic"
    command: "kafka-topics.sh --create --topic apple-wallet-web-service --if-not-exists --bootstrap-server kafka:19094"
    depends_on:
      - kafka

  traefik:
    image: "traefik:latest"
    container_name: apple-wallet-web-service-traefik
    dns:
      ${DNS:-8.8.8.8}

    depends_on:
      - apple-wallet-web-service
      - kafka-ui

    command:
      - "--providers.file.filename=/traefik.yaml"
      - "--log.level=DEBUG"

    ports:
      - "80:80"
      - "${HTTPS_PORT:-8443}:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt/${DOMAIN}:/letsencrypt"
      - "./traefik.yaml:/traefik.yaml"
